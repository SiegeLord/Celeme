include "dummy.cfg"

mechanism IzhMech
{
	state V
	{
		init = -65;
		tolerance = 0.2;
	}
	state u
	{
		init = -5;
		tolerance = 0.02;
	}
	local I;
	
	threshold
	{
		state = "V";
		condition = "> 0";
		code = 
		"
			V = -65;
			u += 2;
			delay = 5;
		";
		event_source = true;
		reset_dt = true;
	}
	
	stage0 =
	"
		I = 0;
	";
	stage2 = 
	"
		V' = (0.04f * V + 5) * V + 140 - u + I;
		u' = 0.01f * (0.2f * V - u);
	";
}

mechanism IzhMech2
{
	state V
	{
		init = -65;
		tolerance = 0.2;
	}
	state u
	{
		init = -5;
		tolerance = 0.02;
	}
	local I;
	threshold
	{
		state = "V";
		condition = "> 0";
		code = 
		"
			V = -65;
			u += 2;
			delay = 5;
		";
		event_source = true;
		reset_dt = true;
	}
	
	stage0 =
	"
		I = 0;
	";
	stage2 = 
	"
		V' = (0.04f * V + 5) * V + 140 - u + I;
		u' = 0.01f * (0.2f * V - u);
	";
}

mechanism IClamp
{
	stage1 = 
	"
		if(i % 2 == 0)
			I += amp + 3;
		else
			I += amp;
	";
	
	external I;
	constant amp;
}

mechanism RandSyn
{
	pre_stage = 
	`
		if(cur_time == 0 && rand() > 0.7)
		{
			r += 0.02;
			reset_dt();
		}
	`;
	
	stage1 = "I += r * (0 - V);";
	stage2 = "r' = -r / 2.0;";
	
	external I; 
	external V;
	
	state r
	{
		tolerance = 0.01;
	}
}

synapse ExpSyn
{
	stage1 = "I += s * (E - V);";
	stage2 = "s' = -s / tau;";
	syn_code = `s += gsyn * weight;`;
	
	constant gsyn = 0.1;
	constant tau = 5;
	constant E = 0;
	
	external V;
	
	state s
	{
		tolerance = 0.01;
	}
	syn_global weight
	{
		init = 1;
		readonly = true;
	}
}

neuron Regular
{
	record_length = 2000;
	record_rate = 100;
	circ_buffer_size = 10;
	num_src_synapses = 150;
	rand_state_len = 2;
	min_dt = 0.1;
	
	mechanism IzhMech;
	mechanism IClamp
	{
		init amp = 3.5;
	}

	//mechanism RandSyn;
	
	synapse ExpSyn
	{
		prefix = "glu";
		number = 150;
		
		init
		{
			E = 0;
			gsyn = 0.006;
		}
	}
	
	synapse ExpSyn
	{
		prefix = "gaba";
		number = 10;
		
		init
		{
			E = -80;
			gsyn = 0.5;
		}
	}
	
	connector RandConn;
}

neuron Burster
{
	record_length = 2000;
	record_rate = 100;
	circ_buffer_size = 10;
	num_src_synapses = 150;
	min_dt = 0.1;
	
	mechanism DummyThresh
	{
		prefix = "hl";
	}
	
	mechanism IzhMech2;
	mechanism IClamp;
	
	synapse ExpSyn
	{
		prefix = "glu";
		number = 150;
		
		init
		{
			E = 0;
			gsyn = 0.006;
		}
	}
	
	synapse ExpSyn
	{
		prefix = "gaba";
		number = 10;
		
		init
		{
			E = -80;
			gsyn = 0.5;
		}
	}
}

connector RandConn
{
	code = 
	`
		int dest = dest_start + cycle % (dest_end - dest_start);
		if(dest != i && rand() < P)
			connect(i, dest);
	`;
	constant P = 1;
}

model
{
	float_type = "float";
	group Regular
	{
		number = 100;
	}
}
